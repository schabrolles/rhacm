kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/connects-to: >-
      [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"mongodb"}]
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"letschat:latest","namespace":"letschat"},"fieldPath":"spec.template.spec.containers[?(@.name==\"letschat\")].image","pause":"false"}]
  name: letschat
  labels:
    app: letschat
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/component: letschat
    app.kubernetes.io/instance: letschat
    app.kubernetes.io/name: letschat
    app.kubernetes.io/part-of: letschat
    app.openshift.io/runtime-namespace: letschat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: letschat
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: letschat
        deploymentconfig: letschat
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: letschat
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          startupProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePolicy: File
          image: quay.io/schabrolles/letschat:latest
          envFrom:
            - secretRef:
                name: mongodb
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
